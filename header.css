.header {
  height: 55px; 
  display: flex; flex-direction: row; justify-content: space-between; position: fixed; 
  top: 0; left: 0; right: 0; z-index: 100;
  background-color: white; border-bottom-width: 1px; border-bottom-style: solid; border-bottom-color: rgb(rgb(240, 240, 240))
}

.left-section {
display: flex; align-items: center;
}
.hamburger-menu {
  height: 24px; margin-left: 24px; margin-right: 24px; 
}
.YouTube-logo{
  height: 20px;
}

/* in our HTML header is flexbox but the left section is still a regular div, it's an element inside a flexbox, but it itself is not a flexbox, so we turn it into flexbox using display flex. Flexbox doesn't go down two layers, only affects items on the first layer like div left section and middle section, if we go down another layer to the img class hamburger menu and img class YouTube logo, flexbox doesn't affect it, that's why we have to turn the left section into a flexbox as well, in other to use align items, etc.*/

.middle-section {
   flex: 1; margin-left: 70px; margin-right: 35px; max-width: 500px; display: flex; align-items: center;
}

.search-bar {
  flex: 1; height: 36px; padding-left: 10px; font-size: 16px; border: 1px solid rgb(192, 192, 192); border-radius: 2px; box-shadow: inset 1px 2px 3px rgba(0, 0, 0, 0.05); width: 0;
}
/* border shortcut for width, background color,etc */
/* width 0 removes the default width, so we can shrink the box more when minimising and maximising, otherwise, ehn it hits the default width, it'll not go down anymore. 
flex shrink 0 to not shrink
width 0 to shrink*/
.search-bar::placeholder {font-size: 16px;
}
/* we use the :: to target the placeholder inside the search bar */

.search-button {
 height: 40px; width: 60px; background-color: rgb(240, 240, 240); border-width: 1px; border-style: solid; border-color: rgb(192, 192, 192); margin-left: -1px; margin-right: 10px; 
}

.search-button,.voice-search-button,
.upload-icon-container, 
.YouTube-apps-icon-container,
.notifications-icon-container {
  position: relative; display: flex; justify-content: center; align-items: center;
}

.search-button .tooltip, 
.voice-search-button .tooltip,
.upload-icon-container .tooltip,
.YouTube-apps-icon-container .tooltip,
.notifications-icon-container .tooltip {
  font-family: Robot, Arial;
  position: absolute; padding-top: 4px; padding-bottom: 4px; padding-left: 8px; padding-right: 8px; font-size: 12px; border-radius: 2px;
  bottom: -30px; opacity: 0; transition: opacity 0.15s; background-color: gray; color: white; pointer-events: none; white-space: nowrap;
}
/* negative margin substracts space and puls the element to the left of that page */

.search-button:hover .tooltip, .voice-search-button:hover .tooltip,
.upload-icon-container:hover .tooltip,
.YouTube-apps-icon-container:hover .tooltip, .notifications-icon-container:hover .tooltip {
  opacity: 1;
}

.search-icon {
  height: 25px;
}
.voice-search-button {
 height: 40px; width: 40px; border-radius: 20px; border: none; background-color: rgb(248, 248, 248);
}
.voice-search-icon {
  height: 24px;
}

.right-section {
  width: 188px; margin-right: 20px;
  display: flex; align-items: center; justify-content: space-between; flex-shrink: 0;
} 
/* Flex shrink 0 prevents the right section from shrinking, no matter what happens with minimizing or maximizing we are going o keep the same width. So it won't bring the icons together as we shrink, the space between the icons will remain the same. */
.upload-icon {
  height: 24px;
}
.YouTube-apps-icon {
  height: 24px;
}
.notifications-icon {
  height: 24px;
}
.notifications-icon-container {
  position: relative;
}
.notifications-count {
  position: absolute; background-color: rgb(200, 0, 0); color: white; top: -2px; right: -5px;
  font-family: Robot, Arial; font-size: 11px; padding-left: 5px; padding-right: 5px; padding-top: 2px; padding-bottom:  2px; border-radius: 10px;
}
.my-profile-picture {
  height: 32px; border-radius: 16px;
}

/* CSS position adds another dimension to our page. Enables the head and side to stay while scrolling, enable the time stamp to stay at the front and the notification message to stay at front of bell. */